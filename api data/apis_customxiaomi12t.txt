com.android.server.display.DisplayManagerService$BinderService.getDisplayIds(Z)[I
com.android.server.display.DisplayManagerService$BinderService.setLimitedFrameRate(Landroid/hardware/display/IVirtualDisplayCallback;I)V
com.mediatek.wfo.impl.MwiService.getWfcHandlerInterface()Lcom/mediatek/wfo/IWifiOffloadService;
com.android.server.statusbar.StatusBarManagerService.setStatus(ILandroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;)V
com.mediatek.server.anr.AnrManagerService.informMessageDump(Ljava/lang/String;I)V
com.mediatek.search.SearchEngineManagerService.getAvailables()Ljava/util/List;
com.mediatek.search.SearchEngineManagerService.getBestMatch(Ljava/lang/String;Ljava/lang/String;)Lcom/mediatek/common/search/SearchEngine;
com.mediatek.search.SearchEngineManagerService.getDefault()Lcom/mediatek/common/search/SearchEngine;
com.mediatek.search.SearchEngineManagerService.getSearchEngine(ILjava/lang/String;)Lcom/mediatek/common/search/SearchEngine;
com.mediatek.search.SearchEngineManagerService.setDefault(Lcom/mediatek/common/search/SearchEngine;)Z
com.android.server.biometrics.sensors.face.FaceService$FaceServiceWrapper.enrollment(Landroid/os/IBinder;[BILandroid/hardware/face/IFaceServiceReceiver;Landroid/view/Surface;Landroid/graphics/RectF;Landroid/graphics/RectF;I)J
com.android.server.biometrics.sensors.face.FaceService$FaceServiceWrapper.extCmd(Landroid/os/IBinder;Landroid/hardware/face/IFaceServiceReceiver;IILjava/lang/String;)I
com.mediatek.internal.telephony.MtkUiccSmsController.activateCellBroadcastSmsForSubscriber(IZ)Z
com.mediatek.internal.telephony.MtkUiccSmsController.copyTextMessageToIccCardForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;IJ)I
com.mediatek.internal.telephony.MtkUiccSmsController.getAllMessagesFromIccEfByModeForSubscriber(ILjava/lang/String;I)Ljava/util/List;
com.mediatek.internal.telephony.MtkUiccSmsController.getCellBroadcastLangsForSubscriber(I)Ljava/lang/String;
com.mediatek.internal.telephony.MtkUiccSmsController.getCellBroadcastRangesForSubscriber(I)Ljava/lang/String;
com.mediatek.internal.telephony.MtkUiccSmsController.getMessageFromIccEfForSubscriber(ILjava/lang/String;I)Lcom/android/internal/telephony/SmsRawData;
com.mediatek.internal.telephony.MtkUiccSmsController.getScAddressForSubscriber(I)Ljava/lang/String;
com.mediatek.internal.telephony.MtkUiccSmsController.getScAddressWithErrorCodeForSubscriber(I)Landroid/os/Bundle;
com.mediatek.internal.telephony.MtkUiccSmsController.getSmsParametersForSubscriber(ILjava/lang/String;)Lmediatek/telephony/MtkSmsParameters;
com.mediatek.internal.telephony.MtkUiccSmsController.getSmsSimMemoryStatusForSubscriber(ILjava/lang/String;)Lcom/mediatek/internal/telephony/MtkIccSmsStorageStatus;
com.mediatek.internal.telephony.MtkUiccSmsController.insertRawMessageToIccCardForSubscriber(ILjava/lang/String;I[B[B)Lmediatek/telephony/MtkSimSmsInsertStatus;
com.mediatek.internal.telephony.MtkUiccSmsController.insertTextMessageToIccCardForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;IJ)Lmediatek/telephony/MtkSimSmsInsertStatus;
com.mediatek.internal.telephony.MtkUiccSmsController.isSmsReadyForSubscriber(I)Z
com.mediatek.internal.telephony.MtkUiccSmsController.queryCellBroadcastSmsActivationForSubscriber(I)Z
com.mediatek.internal.telephony.MtkUiccSmsController.removeCellBroadcastMsgForSubscriber(III)Z
com.mediatek.internal.telephony.MtkUiccSmsController.sendDataWithOriginalPortForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;II[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendMultipartTextWithEncodingTypeForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/util/List;Ljava/util/List;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendMultipartTextWithExtraParamsForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Landroid/os/Bundle;Ljava/util/List;Ljava/util/List;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendTextWithEncodingTypeForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILandroid/app/PendingIntent;Landroid/app/PendingIntent;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendTextWithExtraParamsForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/PendingIntent;Landroid/app/PendingIntent;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.setCellBroadcastLangsForSubscriber(ILjava/lang/String;)Z
com.mediatek.internal.telephony.MtkUiccSmsController.setEtwsConfigForSubscriber(II)Z
com.mediatek.internal.telephony.MtkUiccSmsController.setScAddressForSubscriber(ILjava/lang/String;)Z
com.mediatek.internal.telephony.MtkUiccSmsController.setSmsMemoryStatusForSubscriber(IZ)V
com.mediatek.internal.telephony.MtkUiccSmsController.setSmsParametersForSubscriber(ILjava/lang/String;Lmediatek/telephony/MtkSmsParameters;)Z
com.android.server.wm.ActivityTaskManagerService.castRotationChanged(Z)V
com.android.server.wm.ActivityTaskManagerService.enterSplitScreen(IZ)V
com.android.server.wm.ActivityTaskManagerService.enterSplitScreenMode()V
com.android.server.wm.ActivityTaskManagerService.exitCastMode()V
com.android.server.wm.ActivityTaskManagerService.exitSplitScreen(I)V
com.android.server.wm.ActivityTaskManagerService.getMiuiFreeFormManagerService()Landroid/os/IBinder;
com.android.server.wm.ActivityTaskManagerService.getMiuiMultiWinSplitService()Landroid/os/IBinder;
com.android.server.wm.ActivityTaskManagerService.getNavBarPosition()I
com.android.server.wm.ActivityTaskManagerService.getTaskResizeableForFreeform(I)Z
com.android.server.wm.ActivityTaskManagerService.getTaskSnapshot(IZ)Landroid/window/TaskSnapshot;
com.android.server.wm.ActivityTaskManagerService.getTasks(IZZ)Ljava/util/List;
com.android.server.wm.ActivityTaskManagerService.getTopSplitPackageNames()Ljava/util/List;
com.android.server.wm.ActivityTaskManagerService.getTopVisibleActivity()Landroid/content/Intent;
com.android.server.wm.ActivityTaskManagerService.handleFreeformModeRequst(Landroid/os/IBinder;I)I
com.android.server.wm.ActivityTaskManagerService.isActivityInEmbedded()Z
com.android.server.wm.ActivityTaskManagerService.isActivityInSplitScreen(Landroid/os/IBinder;)Z
com.android.server.wm.ActivityTaskManagerService.isInFreeFormControlRegon(FF)Z
com.android.server.wm.ActivityTaskManagerService.isInSplitScreenWindowingMode()Z
com.android.server.wm.ActivityTaskManagerService.isPairRootTask(I)Z
com.android.server.wm.ActivityTaskManagerService.isTopActivityInFreeform(Ljava/lang/String;)Z
com.android.server.wm.ActivityTaskManagerService.launchFlashBackFromBackGround(Landroid/app/ActivityManager$RunningTaskInfo;Landroid/graphics/Rect;I)V
com.android.server.wm.ActivityTaskManagerService.launchSmallFreeFormWindow(Landroid/app/ActivityTaskManager$RootTaskInfo;Landroid/graphics/Rect;I)V
com.android.server.wm.ActivityTaskManagerService.moveTopActivityToCastMode()V
com.android.server.wm.ActivityTaskManagerService.notifyRemoveSnapshotQS(Landroid/os/IBinder;)V
com.android.server.wm.ActivityTaskManagerService.notifyTakeSnapshotQS(Landroid/os/IBinder;Ljava/lang/String;)V
com.android.server.wm.ActivityTaskManagerService.registerActivityObserver(Landroid/app/IMiuiActivityObserver;Landroid/content/Intent;)V
com.android.server.wm.ActivityTaskManagerService.registerSecureChangedListener(Landroid/app/IWindowSecureChangeListener;)V
com.android.server.wm.ActivityTaskManagerService.setOrientationOptions(Landroid/os/IBinder;I)V
com.android.server.wm.ActivityTaskManagerService.startBackNavigation(Z)Landroid/window/BackNavigationInfo;
com.android.server.wm.ActivityTaskManagerService.supportsSplitScreen(Landroid/content/ComponentName;)Z
com.android.server.wm.ActivityTaskManagerService.unRegisterSecureChangedListener(Landroid/app/IWindowSecureChangeListener;)V
com.android.server.wm.ActivityTaskManagerService.unregisterActivityObserver(Landroid/app/IMiuiActivityObserver;)V
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.getSubIdUsingPhoneId(I)I
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.getSubInfoForIccId(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mediatek/internal/telephony/MtkSubscriptionInfo;
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.setDefaultDataSubIdWithoutCapabilitySwitch(I)V
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.setDefaultFallbackSubId(II)V
com.android.server.vibrator.VibratorManagerService.vibrate(ILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V
com.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper.extCmd(Landroid/os/IBinder;IIILjava/lang/String;)I
com.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper.getSensorLocation()[I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.UpdateManagementPkt(ILjava/lang/String;)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.configBoosterInfo(Lcom/mediatek/powerhalmgr/BoosterInfo;)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.flushPriorityRules(I)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getCpuCap()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getCpuRTInfo()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getGpuCap()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getGpuRTInfo()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.isDupPacketPredictionStarted()Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.mtkCusPowerHint(II)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.mtkPowerHint(II)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.perfCusLockHint(II)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.perfLockAcquire(II[I)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.perfLockRelease(I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.querySysInfo(II)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.registerDuplicatePacketPredictionEvent(Landroid/os/IRemoteCallback;)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnConfig(IIIIII)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnDisable(I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnEnable(II)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnReg()I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnUltraCfg(IIIIII)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnUnreg(I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setForegroundSports()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setPredictInfo(Ljava/lang/String;I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setPriorityByLinkinfo(ILcom/mediatek/powerhalmgr/DupLinkInfo;)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setPriorityByUid(II)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setSysInfo(ILjava/lang/String;)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setSysInfoSync(ILjava/lang/String;)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.startDuplicatePacketPrediction()Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.stopDuplicatePacketPrediction()Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.unregisterDuplicatePacketPredictionEvent(Landroid/os/IRemoteCallback;)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.updateMultiDuplicatePacketLink([Lcom/mediatek/powerhalmgr/DupLinkInfo;)Z
com.android.server.clipboard.ClipboardService$ClipboardImpl.addPrimaryClipChangedListener(Landroid/content/IOnPrimaryClipChangedListener;Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.clearPrimaryClip(Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.getClipboardClickTrace()Ljava/util/Map;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getPrimaryClip(Ljava/lang/String;I)Landroid/content/ClipData;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getPrimaryClipDescription(Ljava/lang/String;I)Landroid/content/ClipDescription;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getPrimaryClipSource(Ljava/lang/String;I)Ljava/lang/String;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getStashPrimaryClip()Landroid/content/ClipData;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getUserPrimaryClip(Ljava/lang/String;I)Landroid/content/ClipData;
com.android.server.clipboard.ClipboardService$ClipboardImpl.hasClipboardText(Ljava/lang/String;I)Z
com.android.server.clipboard.ClipboardService$ClipboardImpl.hasPrimaryClip(Ljava/lang/String;I)Z
com.android.server.clipboard.ClipboardService$ClipboardImpl.pushClipboardRuleData(Landroid/content/pm/ParceledListSlice;)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.removePrimaryClipChangedListener(Landroid/content/IOnPrimaryClipChangedListener;Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.setPrimaryClip(Landroid/content/ClipData;Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.setPrimaryClipAsPackage(Landroid/content/ClipData;Ljava/lang/String;ILjava/lang/String;)V
com.android.server.locksettings.LockSettingsService.checkPrivacyPasswordPattern(Ljava/lang/String;Ljava/lang/String;I)Z
com.android.server.locksettings.LockSettingsService.savePrivacyPasswordPattern(Ljava/lang/String;Ljava/lang/String;I)V
com.android.server.StorageManagerService.fixupAppDirRecursive(Ljava/lang/String;III)V
com.android.server.StorageManagerService.getCldFragLevel()I
com.android.server.StorageManagerService.getExtMGearInterface()[F
com.android.server.StorageManagerService.moveStorageQuickly(Ljava/lang/String;Ljava/lang/String;I)V
com.android.server.StorageManagerService.triggerCld()I
com.mediatek.server.vow.VoiceWakeupBridgeService$VoiceWakeupBridgeStub.startRecognition(ILandroid/hardware/soundtrigger/SoundTrigger$KeyphraseSoundModel;Landroid/hardware/soundtrigger/IRecognitionStatusCallback;Landroid/hardware/soundtrigger/SoundTrigger$RecognitionConfig;)I
com.mediatek.server.vow.VoiceWakeupBridgeService$VoiceWakeupBridgeStub.stopRecognition(ILandroid/hardware/soundtrigger/IRecognitionStatusCallback;)I
com.mediatek.server.vow.VoiceWakeupBridgeService$VoiceWakeupBridgeStub.unloadKeyphraseModel(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.addContactToGroup(III)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsCapacityExt()[I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsCapacityForSubscriber(I)[I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsInEf(I)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsInEfForSubscriber(II)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAnrCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getEmailCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getPhonebookMemStorageExt(I)[Lcom/mediatek/internal/telephony/phb/UsimPBMemInfo;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getSneRecordLen(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUpbDone(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasById(II)Ljava/lang/String;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasList(I)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasMaxCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasMaxNameLen(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGroupById(II)Ljava/lang/String;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGroups(I)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGrpMaxCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGrpMaxNameLen(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.hasExistGroup(ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.hasSne(I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.insertUsimAas(ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.insertUsimGroup(ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.isAdnAccessible(I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.isPhbReady(I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.moveContactFromGroupsToGroups(II[I[I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.removeContactFromGroup(III)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.removeUsimAasById(III)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.removeUsimGroupById(II)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateAdnRecordsInEfByIndexWithError(IILjava/lang/String;Ljava/lang/String;ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateAdnRecordsInEfBySearchWithError(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateContactToGroups(II[I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimAas(IIILjava/lang/String;)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimGroup(IILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsByIndexWithError(IILcom/mediatek/internal/telephony/phb/MtkAdnRecord;I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsBySearchWithError(IILcom/mediatek/internal/telephony/phb/MtkAdnRecord;Lcom/mediatek/internal/telephony/phb/MtkAdnRecord;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsInEfByIndexWithError(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsInEfBySearchWithError(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
