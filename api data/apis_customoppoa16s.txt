com.android.server.onetrace.OplusTraceService.callUpdateContentFilter(ILandroid/os/IOplusFilterListener;)V
com.android.server.onetrace.OplusTraceService.flushTraceBuffer()Z
com.android.server.onetrace.OplusTraceService.getProcessTree()Ljava/util/List;
com.android.server.onetrace.OplusTraceService.handleTraceShmemBuffer(Landroid/os/SharedMemory;I)V
com.android.server.onetrace.OplusTraceService.obtainMemoryCache(Ljava/lang/String;ILandroid/os/IOplusFilterListener;)Landroid/os/SharedMemory;
com.android.server.onetrace.OplusTraceService.obtainSharedMemory(Ljava/lang/String;)Landroid/os/SharedMemory;
com.android.server.onetrace.OplusTraceService.registerCallBack(Landroid/os/IOplusTraceCallBack;)Z
com.android.server.onetrace.OplusTraceService.unregisterCallBack(Landroid/os/IOplusTraceCallBack;)V
com.android.server.onetrace.OplusTraceService.updateContentFilterList(Ljava/util/Map;)V
com.android.server.onetrace.OplusTraceService.updateProcessWhitelist([Ljava/lang/String;)V
com.android.server.onetrace.OplusTraceService.uploadProcessTree(ILjava/lang/String;Ljava/util/Map;)V
com.android.server.oplus.SecurityPermissionService.basicTypes(IJZFDLjava/lang/String;)V
com.android.server.oplus.SecurityPermissionService.checkOplusPermission(Ljava/lang/String;II)Z
com.android.server.oplus.SecurityPermissionService.queryPackagePermissionsAsUser(Ljava/lang/String;I)Landroid/content/pm/PackagePermission;
com.android.server.oplus.SecurityPermissionService.queryPermissionAsUser(Ljava/lang/String;Ljava/lang/String;I)I
com.android.server.oplus.SecurityPermissionService.updateCachedPermission(Ljava/lang/String;IZ)V
com.mediatek.wfo.impl.MwiService.getWfcHandlerInterface()Lcom/mediatek/wfo/IWifiOffloadService;
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.addAuthResultInfo(IIILjava/lang/String;)V
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.clearSDLockPassword()I
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.decryptDek([BI[B[B[B[B)[B
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.encryptDek([BI[B[B[B)Ljava/util/Map;
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.eraseSDLock()V
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.getSDCardId()Ljava/lang/String;
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.getSDLockState()I
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.getStorageData()I
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.getUnlockSdcardDeadline()J
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.initAeKek()Ljava/util/Map;
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.initBeKek()Ljava/util/Map;
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.setSDLockPassword(Ljava/lang/String;)I
com.android.server.storage.DeviceStorageMonitorServiceExtImpl$OplusStorageDataProvider.unlockSDCard(Ljava/lang/String;)I
com.android.server.oplus.MotorManagerService$11.breathLedLoopEffect(I)V
com.android.server.oplus.MotorManagerService$11.downMotorByPrivacyApp(Ljava/lang/String;ILandroid/os/IBinder;)I
com.android.server.oplus.MotorManagerService$11.downMotorBySystemApp(Ljava/lang/String;Landroid/os/IBinder;)I
com.android.server.oplus.MotorManagerService$11.getMotorStateBySystemApp()I
com.android.server.oplus.MotorManagerService$11.upMotorBySystemApp(Ljava/lang/String;Landroid/os/IBinder;)I
com.mediatek.server.anr.AnrManagerService.informMessageDump(Ljava/lang/String;I)V
com.android.server.am.BatteryStatsServiceExtImpl$OplusBatteryStatsServiceControl.getUidSipper([IJIZZ)[Lcom/android/internal/os/UidSipper;
com.android.server.StorageManagerService.clearCache()V
com.android.server.StorageManagerService.startserviceAppFuse()V
com.android.server.StorageManagerService.stopserviceAppFuse()V
com.android.server.net.datalimit.DataLimitService.getDataLimitState(I)I
com.android.server.net.datalimit.DataLimitService.registerDataLimitEvent(Lcom/oplus/network/IDataLimitEventCb;)V
com.android.server.net.datalimit.DataLimitService.unregisterDataLimitEvent(Lcom/oplus/network/IDataLimitEventCb;)V
com.android.server.oplus.CabcService.closeCabc()V
com.android.server.oplus.CabcService.closeCabcForever(Z)V
com.android.server.oplus.CabcService.getMode()I
com.android.server.oplus.CabcService.openCabc()V
com.android.server.oplus.CabcService.setMode(I)V
com.android.server.dynamicvsync.OplusDynamicVsyncService.doAnimation(ILjava/lang/String;)V
com.android.server.dynamicvsync.OplusDynamicVsyncService.flingEvent(Ljava/lang/String;I)V
com.android.server.nwpower.OAppNetControlService.destroySocket(I)V
com.android.server.nwpower.OAppNetControlService.legacyDestroySocket()V
com.android.server.nwpower.OAppNetControlService.requestAppFireWallHistoryStamp(I)[J
com.android.server.nwpower.OAppNetControlService.setFirewall(IZ)V
com.android.server.nwpower.OAppNetControlService.setFirewallWithArgs(IZII)V
com.android.server.operator.OplusOperatorManagerService$BinderService.getConfigMap(Landroid/os/Bundle;)Ljava/util/Map;
com.android.server.operator.OplusOperatorManagerService$BinderService.getCotaAppPackageNameList()Ljava/util/List;
com.android.server.operator.OplusOperatorManagerService$BinderService.getCotaMountState(Ljava/lang/String;)I
com.android.server.operator.OplusOperatorManagerService$BinderService.grantCustomizedRuntimePermissions()V
com.android.server.operator.OplusOperatorManagerService$BinderService.isInSimTriggeredSystemBlackList(Ljava/lang/String;)Z
com.android.server.operator.OplusOperatorManagerService$BinderService.mountCotaImage(Landroid/os/Bundle;)V
com.android.server.operator.OplusOperatorManagerService$BinderService.notifyCotaMounted()V
com.android.server.operator.OplusOperatorManagerService$BinderService.notifyRegionSwitch(Landroid/os/Bundle;)V
com.android.server.operator.OplusOperatorManagerService$BinderService.notifySimSwitch(Landroid/os/Bundle;)V
com.android.server.operator.OplusOperatorManagerService$BinderService.notifySmartCustomizationStart()V
com.android.server.operator.OplusOperatorManagerService$BinderService.testAidl()V
com.android.server.net.OplusNetworkStatsService.fetchAppFreezeStats()Lcom/oplus/network/stats/AppFreezeStatsTotal;
com.android.server.net.OplusNetworkStatsService.fetchAppFreezeSyns()Lcom/oplus/network/stats/AppFreezeSyncTotal;
com.android.server.net.OplusNetworkStatsService.getAppFreezeConfig()Lcom/oplus/network/stats/AppFreezeConfig;
com.android.server.net.OplusNetworkStatsService.getIfnameUidStatsTotal()Lcom/oplus/network/stats/IfaceUidStatsTotal;
com.android.server.net.OplusNetworkStatsService.getSocketIsLocal(J)I
com.android.server.net.OplusNetworkStatsService.getSocketSpeedsTotal(II[J)Lcom/oplus/network/stats/SpeedsValueTotal;
com.android.server.net.OplusNetworkStatsService.getUidPurStats(I)Lcom/oplus/network/stats/StatsValue;
com.android.server.net.OplusNetworkStatsService.getUidPurStatsTotal()Lcom/oplus/network/stats/StatsValueTotal;
com.android.server.net.OplusNetworkStatsService.getUidSpeedsIfindex(I)Lcom/oplus/network/stats/IfaceSpeedsValueTotal;
com.android.server.net.OplusNetworkStatsService.getUidStatsTotal()Lcom/oplus/network/stats/StatsValueTotal;
com.android.server.net.OplusNetworkStatsService.setAppFreezeConfig(Lcom/oplus/network/stats/AppFreezeConfig;)Z
com.android.server.net.OplusNetworkStatsService.setBpfSocketSpeedsConfig(I)I
com.android.server.net.OplusNetworkStatsService.startBpfSocketSpeedsCalc(IZ)I
com.android.server.net.OplusNetworkStatsService.stopBpfSocketSpeedsCalc(I)I
com.android.server.oplus.FelicadeviceService.oplusPnscrGetCurrent()I
com.android.server.oplus.FelicadeviceService.oplusPnscrGetFreq()I
com.android.server.oplus.FelicadeviceService.oplusPnscrTestCardEmulation()Z
com.android.server.oplus.FelicadeviceService.oplusPnscrTestGpFelicaSpc()I
com.android.server.net.OplusNetworkStackService.getNetworkScore(Landroid/net/Network;)I
com.android.server.net.OplusNetworkStackService.oplusAddAppDnsConfig([Ljava/lang/String;[I)Z
com.android.server.net.OplusNetworkStackService.oplusClearAppDnsConfig()Z
com.android.server.net.OplusNetworkStackService.oplusDelAppDnsConfig([Ljava/lang/String;)Z
com.android.server.net.OplusNetworkStackService.oplusGetUidByPort(ILjava/lang/String;)I
com.android.server.net.OplusNetworkStackService.oplusSetRedirectPort(II)Z
com.android.server.net.OplusNetworkStackService.registerOplusNetdEvent(Lcom/oplus/network/IOplusNetdEventCb;)V
com.android.server.net.OplusNetworkStackService.registerTcpScoreChange(Lcom/oplus/network/IOplusNetScoreChange;)V
com.android.server.net.OplusNetworkStackService.unregisterOplusNetdEvent(Lcom/oplus/network/IOplusNetdEventCb;)V
com.android.server.net.OplusNetworkStackService.unregisterTcpScoreChange(Lcom/oplus/network/IOplusNetScoreChange;)V
com.android.server.net.OplusNetworkStackService.videoFrameLag(Z)V
com.android.server.net.OplusNetworkStackService.videoStop()V
com.android.server.display.DisplayManagerService$BinderService.setSpecBrightness(ILjava/lang/String;I)V
com.mediatek.server.vow.VoiceWakeupBridgeService$VoiceWakeupBridgeStub.startRecognition(ILandroid/hardware/soundtrigger/SoundTrigger$KeyphraseSoundModel;Landroid/hardware/soundtrigger/IRecognitionStatusCallback;Landroid/hardware/soundtrigger/SoundTrigger$RecognitionConfig;)I
com.mediatek.server.vow.VoiceWakeupBridgeService$VoiceWakeupBridgeStub.stopRecognition(ILandroid/hardware/soundtrigger/IRecognitionStatusCallback;)I
com.mediatek.server.vow.VoiceWakeupBridgeService$VoiceWakeupBridgeStub.unloadKeyphraseModel(I)I
com.android.server.nwpower.OSysNetControlService.setDataEnabled(Z)V
com.android.server.nwpower.OSysNetControlService.setWifiEnabled(Z)V
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.getSubIdUsingPhoneId(I)I
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.getSubInfo(Ljava/lang/String;ILjava/lang/String;)Lcom/mediatek/internal/telephony/MtkSubscriptionInfo;
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.getSubInfoForIccId(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mediatek/internal/telephony/MtkSubscriptionInfo;
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.setDefaultDataSubIdWithoutCapabilitySwitch(I)V
com.mediatek.internal.telephony.MtkSubscriptionControllerEx.setDefaultFallbackSubId(II)V
com.oplus.atlas.OplusMMAtlasService.checkIsInDaemonlistByName(Ljava/lang/String;Ljava/lang/String;)Z
com.oplus.atlas.OplusMMAtlasService.checkIsInDaemonlistByUid(Ljava/lang/String;I)Z
com.oplus.atlas.OplusMMAtlasService.getAttributeByAppName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
com.oplus.atlas.OplusMMAtlasService.getAttributeByAppUid(Ljava/lang/String;I)Ljava/lang/String;
com.oplus.atlas.OplusMMAtlasService.getConfigAppList(Ljava/lang/String;)Ljava/util/List;
com.oplus.atlas.OplusMMAtlasService.getListInfoByAppName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
com.oplus.atlas.OplusMMAtlasService.getListInfoByAppUid(Ljava/lang/String;I)Ljava/lang/String;
com.oplus.atlas.OplusMMAtlasService.getPackageNameByPid(I)Ljava/lang/String;
com.oplus.atlas.OplusMMAtlasService.getPackageNameByUid(I)Ljava/lang/String;
com.oplus.atlas.OplusMMAtlasService.getParameters(Ljava/lang/String;)Ljava/lang/String;
com.oplus.atlas.OplusMMAtlasService.interfaceCallPermissionCheck(Ljava/lang/String;Ljava/lang/String;)Z
com.oplus.atlas.OplusMMAtlasService.registerAudioCallback(Lcom/oplus/atlas/IOplusAtlasAudioCallback;)V
com.oplus.atlas.OplusMMAtlasService.registerCallback(Lcom/oplus/atlas/IOplusAtlasServiceCallback;)V
com.oplus.atlas.OplusMMAtlasService.setEvent(Ljava/lang/String;Ljava/lang/String;)V
com.oplus.atlas.OplusMMAtlasService.setEventToNative(Ljava/lang/String;Ljava/lang/String;)V
com.oplus.atlas.OplusMMAtlasService.setParameters(Ljava/lang/String;)V
com.oplus.atlas.OplusMMAtlasService.unRegisterAudioCallback(Lcom/oplus/atlas/IOplusAtlasAudioCallback;)V
com.oplus.atlas.OplusMMAtlasService.unRegisterCallback(Lcom/oplus/atlas/IOplusAtlasServiceCallback;)V
com.mediatek.gwsd.service.GwsdService.addListener(ILcom/mediatek/gwsd/IGwsdListener;)V
com.mediatek.gwsd.service.GwsdService.isDataAvailableForGwsdDualSim(Z)Z
com.mediatek.gwsd.service.GwsdService.removeListener(I)V
com.mediatek.gwsd.service.GwsdService.setAutoRejectModeEnabled(IZ)V
com.mediatek.gwsd.service.GwsdService.setCallValidTimer(II)V
com.mediatek.gwsd.service.GwsdService.setGwsdDualSimEnabled(Z)V
com.mediatek.gwsd.service.GwsdService.setIgnoreSameNumberInterval(II)V
com.mediatek.gwsd.service.GwsdService.setUserModeEnabled(IZ)V
com.mediatek.gwsd.service.GwsdService.syncGwsdInfo(IZZ)V
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.addContactToGroup(III)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsCapacityExt()[I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsCapacityForSubscriber(I)[I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsInEf(I)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAdnRecordsInEfForSubscriber(II)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getAnrCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getEmailCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getPhonebookMemStorageExt(I)[Lcom/mediatek/internal/telephony/phb/UsimPBMemInfo;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getSneRecordLen(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUpbDone(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasById(II)Ljava/lang/String;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasList(I)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasMaxCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimAasMaxNameLen(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGroupById(II)Ljava/lang/String;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGroups(I)Ljava/util/List;
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGrpMaxCount(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.getUsimGrpMaxNameLen(I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.hasExistGroup(ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.hasSne(I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.insertUsimAas(ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.insertUsimGroup(ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.isAdnAccessible(I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.isPhbReady(I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.moveContactFromGroupsToGroups(II[I[I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.removeContactFromGroup(III)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.removeUsimAasById(III)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.removeUsimGroupById(II)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateAdnRecordsInEfByIndexWithError(IILjava/lang/String;Ljava/lang/String;ILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateAdnRecordsInEfBySearchWithError(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateContactToGroups(II[I)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimAas(IIILjava/lang/String;)Z
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimGroup(IILjava/lang/String;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsByIndexWithError(IILcom/mediatek/internal/telephony/phb/MtkAdnRecord;I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsBySearchWithError(IILcom/mediatek/internal/telephony/phb/MtkAdnRecord;Lcom/mediatek/internal/telephony/phb/MtkAdnRecord;)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsInEfByIndexWithError(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)I
com.mediatek.internal.telephony.phb.MtkUiccPhoneBookController.updateUsimPBRecordsInEfBySearchWithError(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
com.android.server.oplus.LinearmotorVibratorService.cancelVibrate(Lcom/oplus/os/WaveformEffect;Landroid/os/IBinder;)V
com.android.server.oplus.LinearmotorVibratorService.getSettingsNotificationEffectStrength()I
com.android.server.oplus.LinearmotorVibratorService.getSettingsRingtoneEffectStrength()I
com.android.server.oplus.LinearmotorVibratorService.getSettingsTouchEffectStrength()I
com.android.server.oplus.LinearmotorVibratorService.getVibratorStatus()I
com.android.server.oplus.LinearmotorVibratorService.getVibratorTouchStyle()I
com.android.server.oplus.LinearmotorVibratorService.setVibratorStrength(I)V
com.android.server.oplus.LinearmotorVibratorService.setVibratorTouchStyle(I)V
com.android.server.oplus.LinearmotorVibratorService.vibrate(ILjava/lang/String;Lcom/oplus/os/WaveformEffect;Landroid/os/IBinder;)V
com.android.server.oplus.customize.OplusCustomizeService.checkPermission()V
com.android.server.oplus.customize.OplusCustomizeService.getDeviceManagerServiceByName(Ljava/lang/String;)Landroid/os/IBinder;
com.android.server.oplus.customize.OplusCustomizeService.isOTAUpdated()Z
com.android.server.oplus.customize.OplusCustomizeService.isPlatformSigned(I)Z
com.android.server.oplus.customize.OplusCustomizeService.isSimUnlockedState()Z
com.android.server.StorageHealthInfoService.getStorageHealthInfoItem()[Ljava/lang/String;
com.android.server.StorageHealthInfoService.getStorageOriginalInfo()[B
com.android.server.StorageHealthInfoService.getstrStorageHealthInfo()[Ljava/lang/String;
com.android.server.oplus.filter.DynamicFilterService$DynamicFilterServiceWrapper.addToFilter(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
com.android.server.oplus.filter.DynamicFilterService$DynamicFilterServiceWrapper.getFilterTagValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
com.android.server.oplus.filter.DynamicFilterService$DynamicFilterServiceWrapper.hasFilter(Ljava/lang/String;)Z
com.android.server.oplus.filter.DynamicFilterService$DynamicFilterServiceWrapper.inFilter(Ljava/lang/String;Ljava/lang/String;)Z
com.android.server.oplus.filter.DynamicFilterService$DynamicFilterServiceWrapper.removeFromFilter(Ljava/lang/String;Ljava/lang/String;)V
com.android.server.neuron.NeuronSystemService.enableRecommendedApps(ZLjava/util/List;)V
com.android.server.neuron.NeuronSystemService.getRecommendedApps(I)Ljava/util/List;
com.android.server.neuron.NeuronSystemService.publishEvent(ILandroid/content/ContentValues;)V
com.android.server.neuron.NeuronSystemService.registerEventListener(Lcom/oplus/neuron/INeuronSystemEventListener;)V
com.mediatek.search.SearchEngineManagerService.getAvailables()Ljava/util/List;
com.mediatek.search.SearchEngineManagerService.getBestMatch(Ljava/lang/String;Ljava/lang/String;)Lcom/mediatek/common/search/SearchEngine;
com.mediatek.search.SearchEngineManagerService.getDefault()Lcom/mediatek/common/search/SearchEngine;
com.mediatek.search.SearchEngineManagerService.getSearchEngine(ILjava/lang/String;)Lcom/mediatek/common/search/SearchEngine;
com.mediatek.search.SearchEngineManagerService.setDefault(Lcom/mediatek/common/search/SearchEngine;)Z
com.android.server.oplus.heimdall.HeimdallService.getCrashService()Lcom/oplus/heimdall/ICrashService;
com.android.server.oplus.heimdall.HeimdallService.getRootService()Lcom/oplus/heimdall/IRootService;
com.android.server.oplus.heimdall.HeimdallService.getTraceService()Lcom/oplus/heimdall/ITraceService;
com.android.server.commscene.CommSceneService.listen(Ljava/lang/String;Lcom/oplus/commscene/ICommSceneListener;I)V
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.addList(Ljava/lang/String;Ljava/util/List;I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.clearData(I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.clearList(I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.getData(Ljava/lang/String;I)Ljava/lang/String;
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.getList(Ljava/lang/String;I)Ljava/util/List;
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.registerOplusDevicePolicyObserver(Ljava/lang/String;Landroid/os/oplusdevicepolicy/IOplusDevicePolicyObserver;)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.removeData(Ljava/lang/String;I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.removeList(Ljava/lang/String;I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.removePartListData(Ljava/lang/String;Ljava/util/List;I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.setData(Ljava/lang/String;Ljava/lang/String;I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.setList(Ljava/lang/String;Ljava/util/List;I)Z
com.android.server.oplus.oplusdevicepolicy.OplusDevicePolicyManagerService.unregisterOplusDevicePolicyObserver(Landroid/os/oplusdevicepolicy/IOplusDevicePolicyObserver;)Z
com.android.server.net.OplusUidPurStatsSerivce.fetchAppFreezeStatsInfoList()[Lcom/oplus/network/stats/AppFreezeStatsInfo;
com.android.server.net.OplusUidPurStatsSerivce.fetchAppFreezeSynInfoList()[Lcom/oplus/network/stats/AppFreezeSyncInfo;
com.android.server.net.OplusUidPurStatsSerivce.getNoDataUids()[I
com.android.server.net.OplusUidPurStatsSerivce.getStatsCheckStatus()Z
com.android.server.net.OplusUidPurStatsSerivce.isUidNoData(I)Z
com.android.server.net.OplusUidPurStatsSerivce.registerUidNwStatusChange(Lcom/oplus/network/IOplusUidNwChange;)V
com.android.server.net.OplusUidPurStatsSerivce.unregisterUidNwStatusChange(Lcom/oplus/network/IOplusUidNwChange;)V
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getBattPPSChgIng()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getBattPPSChgPower()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getBeginDecimal()F
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getChargerTechnology()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getCustomSelectChgMode()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getEndDecimal()F
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getPsyBatteryHmac()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getPsyBatteryNotify()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getPsyBatteryRm()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getPsyChargeTech()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getPsyOtgOnline()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getSmartChgMode()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getWiredOtgOnline()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getWirelessAdapterPower()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getWirelessPenPresent()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getWirelessTXEnable()Ljava/lang/String;
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.getWirelessUserSleepMode()I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.isCameraOn()Z
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.setChargeLevel(Ljava/lang/String;Ljava/lang/String;)V
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.setCustomSelectChgMode(IZ)I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.setPsyMmiChgEn(Ljava/lang/String;)V
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.setSmartChgMode(Ljava/lang/String;)I
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.setWirelessPenSoc(Ljava/lang/String;)V
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.setWirelessTXEnable(Ljava/lang/String;)V
com.android.server.BatteryServiceExtImpl$GuardElfThermalControl.setWirelessUserSleepMode(Ljava/lang/String;)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.UpdateManagementPkt(ILjava/lang/String;)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.flushPriorityRules(I)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getCpuCap()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getCpuRTInfo()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getGpuCap()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.getGpuRTInfo()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.isDupPacketPredictionStarted()Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.mtkCusPowerHint(II)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.mtkPowerHint(II)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.perfCusLockHint(II)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.perfLockAcquire(II[I)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.perfLockRelease(I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.querySysInfo(II)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.registerDuplicatePacketPredictionEvent(Landroid/os/IRemoteCallback;)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnConfig(IIIIII)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnDisable(I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnEnable(II)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnReg()I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnUltraCfg(IIIIII)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.scnUnreg(I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setForegroundSports()V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setPredictInfo(Ljava/lang/String;I)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setPriorityByLinkinfo(ILcom/mediatek/powerhalmgr/DupLinkInfo;)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setPriorityByUid(II)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setSysInfo(ILjava/lang/String;)V
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.setSysInfoSync(ILjava/lang/String;)I
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.startDuplicatePacketPrediction()Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.stopDuplicatePacketPrediction()Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.unregisterDuplicatePacketPredictionEvent(Landroid/os/IRemoteCallback;)Z
com.mediatek.powerhalservice.PowerHalMgrServiceImpl.updateMultiDuplicatePacketLink([Lcom/mediatek/powerhalmgr/DupLinkInfo;)Z
com.android.server.net.olk.OlkService.getVersion()Ljava/lang/String;
com.android.server.net.olk.OlkService.registerEventChange(Lcom/oplus/network/IOlkEventChange;)V
com.android.server.net.olk.OlkService.registerInternalCallback(Lcom/oplus/network/IOlkInternalCallback;)V
com.android.server.net.olk.OlkService.request(Landroid/os/Bundle;)Landroid/os/Bundle;
com.android.server.net.olk.OlkService.unregisterEventChange(Lcom/oplus/network/IOlkEventChange;)V
com.android.server.net.olk.OlkService.unregisterInternalCallback(Lcom/oplus/network/IOlkInternalCallback;)V
com.android.server.wm.OplusDisplayModeService.addCallback(ILcom/oplus/screenmode/IOplusScreenModeCallback;)V
com.android.server.wm.OplusDisplayModeService.enterDCAndLowBrightnessMode(Z)V
com.android.server.wm.OplusDisplayModeService.enterPSModeOnRateWithToken(ZILandroid/os/IBinder;)V
com.android.server.wm.OplusDisplayModeService.isDisplayCompat(Ljava/lang/String;I)Z
com.android.server.wm.OplusDisplayModeService.keepHighRefreshRate(I)V
com.android.server.wm.OplusDisplayModeService.overrideWindowRefreshRate(Landroid/os/IBinder;I)V
com.android.server.wm.OplusDisplayModeService.remove(ILcom/oplus/screenmode/IOplusScreenModeCallback;)V
com.android.server.wm.OplusDisplayModeService.requestGameRefreshRate(Ljava/lang/String;I)Z
com.android.server.wm.OplusDisplayModeService.requestMemcGameRefreshRate(ZI)Z
com.android.server.wm.OplusDisplayModeService.requestRefreshRate(ZI)Z
com.android.server.wm.OplusDisplayModeService.requestRefreshRateWithToken(ZILandroid/os/IBinder;)Z
com.android.server.wm.OplusDisplayModeService.setHighTemperatureStatus(II)Z
com.android.server.wm.OplusDisplayModeService.setMemcWorkStatus(Z)V
com.android.server.wm.OplusDisplayModeService.updateFpsWhenDcChange(Z)V
com.android.server.wm.IOplusScreenModeHook.addCallback(ILcom/oplus/screenmode/IOplusScreenModeCallback;)V
com.android.server.wm.IOplusScreenModeHook.enterDCAndLowBrightnessMode(Z)V
com.android.server.wm.IOplusScreenModeHook.enterPSMode(Z)V
com.android.server.wm.IOplusScreenModeHook.enterPSModeOnRate(ZI)V
com.android.server.wm.IOplusScreenModeHook.enterPSModeOnRateWithToken(ZILandroid/os/IBinder;)V
com.android.server.wm.IOplusScreenModeHook.getDisableOverrideViewList(Ljava/lang/String;)Ljava/lang/String;
com.android.server.wm.IOplusScreenModeHook.getGameList(Landroid/os/Bundle;)Z
com.android.server.wm.IOplusScreenModeHook.isDisplayCompat(Ljava/lang/String;I)Z
com.android.server.wm.IOplusScreenModeHook.keepHighRefreshRate(I)V
com.android.server.wm.IOplusScreenModeHook.overrideWindowRefreshRate(Landroid/os/IBinder;I)V
com.android.server.wm.IOplusScreenModeHook.remove(ILcom/oplus/screenmode/IOplusScreenModeCallback;)V
com.android.server.wm.IOplusScreenModeHook.requestGameRefreshRate(Ljava/lang/String;I)Z
com.android.server.wm.IOplusScreenModeHook.requestMemcGameRefreshRate(ZI)Z
com.android.server.wm.IOplusScreenModeHook.requestRefreshRate(ZI)Z
com.android.server.wm.IOplusScreenModeHook.requestRefreshRateWithToken(ZILandroid/os/IBinder;)Z
com.android.server.wm.IOplusScreenModeHook.setClientRefreshRate(Landroid/os/IBinder;I)V
com.android.server.wm.IOplusScreenModeHook.setHighTemperatureStatus(II)Z
com.android.server.wm.IOplusScreenModeHook.setMemcWorkStatus(Z)V
com.android.server.wm.IOplusScreenModeHook.supportDisplayCompat(Ljava/lang/String;I)Z
com.android.server.wm.IOplusScreenModeHook.updateFpsWhenDcChange(Z)V
com.android.server.oplus.osense.OsenseResManagerService$2.athenaReqSceneAction(Ljava/lang/String;Landroid/os/Bundle;)V
com.android.server.oplus.osense.OsenseResManagerService$2.updateConfig(Ljava/lang/String;Landroid/os/Bundle;)V
com.mediatek.internal.telephony.MtkUiccSmsController.activateCellBroadcastSmsForSubscriber(IZ)Z
com.mediatek.internal.telephony.MtkUiccSmsController.copyTextMessageToIccCardForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;IJ)I
com.mediatek.internal.telephony.MtkUiccSmsController.getAllMessagesFromIccEfByModeForSubscriber(ILjava/lang/String;I)Ljava/util/List;
com.mediatek.internal.telephony.MtkUiccSmsController.getCellBroadcastLangsForSubscriber(I)Ljava/lang/String;
com.mediatek.internal.telephony.MtkUiccSmsController.getCellBroadcastRangesForSubscriber(I)Ljava/lang/String;
com.mediatek.internal.telephony.MtkUiccSmsController.getMessageFromIccEfForSubscriber(ILjava/lang/String;I)Lcom/android/internal/telephony/SmsRawData;
com.mediatek.internal.telephony.MtkUiccSmsController.getScAddressForSubscriber(I)Ljava/lang/String;
com.mediatek.internal.telephony.MtkUiccSmsController.getScAddressWithErrorCodeForSubscriber(I)Landroid/os/Bundle;
com.mediatek.internal.telephony.MtkUiccSmsController.getSmsParametersForSubscriber(ILjava/lang/String;)Lmediatek/telephony/MtkSmsParameters;
com.mediatek.internal.telephony.MtkUiccSmsController.getSmsSimMemoryStatusForSubscriber(ILjava/lang/String;)Lcom/mediatek/internal/telephony/MtkIccSmsStorageStatus;
com.mediatek.internal.telephony.MtkUiccSmsController.insertRawMessageToIccCardForSubscriber(ILjava/lang/String;I[B[B)Lmediatek/telephony/MtkSimSmsInsertStatus;
com.mediatek.internal.telephony.MtkUiccSmsController.insertTextMessageToIccCardForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;IJ)Lmediatek/telephony/MtkSimSmsInsertStatus;
com.mediatek.internal.telephony.MtkUiccSmsController.isSmsReadyForSubscriber(I)Z
com.mediatek.internal.telephony.MtkUiccSmsController.queryCellBroadcastSmsActivationForSubscriber(I)Z
com.mediatek.internal.telephony.MtkUiccSmsController.removeCellBroadcastMsgForSubscriber(III)Z
com.mediatek.internal.telephony.MtkUiccSmsController.sendDataWithOriginalPortForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;II[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendMultipartTextWithEncodingTypeForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/util/List;Ljava/util/List;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendMultipartTextWithExtraParamsForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Landroid/os/Bundle;Ljava/util/List;Ljava/util/List;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendTextWithEncodingTypeForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILandroid/app/PendingIntent;Landroid/app/PendingIntent;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.sendTextWithExtraParamsForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/PendingIntent;Landroid/app/PendingIntent;Z)V
com.mediatek.internal.telephony.MtkUiccSmsController.setCellBroadcastLangsForSubscriber(ILjava/lang/String;)Z
com.mediatek.internal.telephony.MtkUiccSmsController.setEtwsConfigForSubscriber(II)Z
com.mediatek.internal.telephony.MtkUiccSmsController.setScAddressForSubscriber(ILjava/lang/String;)Z
com.mediatek.internal.telephony.MtkUiccSmsController.setSmsMemoryStatusForSubscriber(IZ)V
com.mediatek.internal.telephony.MtkUiccSmsController.setSmsParametersForSubscriber(ILjava/lang/String;Lmediatek/telephony/MtkSmsParameters;)Z
com.android.server.OplusNecService.addNecEventListener(Ljava/lang/String;Lcom/oplus/nec/IOnNecEventListener;)V
com.android.server.OplusNecService.clearCellAppsRttRecord()V
com.android.server.OplusNecService.clearCellDnsRecord()V
com.android.server.OplusNecService.clearCellHttpRecord()V
com.android.server.OplusNecService.clearCellNetTotalRecord()V
com.android.server.OplusNecService.clearCellTcpRecord()V
com.android.server.OplusNecService.clearWlanAppsRttRecord()V
com.android.server.OplusNecService.clearWlanDnsRecord()V
com.android.server.OplusNecService.clearWlanHttpRecord()V
com.android.server.OplusNecService.clearWlanPowerRecord()V
com.android.server.OplusNecService.clearWlanTcpRecord()V
com.android.server.OplusNecService.getCellAppsRttRecord()Ljava/lang/String;
com.android.server.OplusNecService.getCellDnsRecord()Ljava/lang/String;
com.android.server.OplusNecService.getCellHttpRecord()Ljava/lang/String;
com.android.server.OplusNecService.getCellNetTotalRecord()Ljava/lang/String;
com.android.server.OplusNecService.getCellTcpRecord()Ljava/lang/String;
com.android.server.OplusNecService.getWlanAppsRttRecord()Ljava/lang/String;
com.android.server.OplusNecService.getWlanDnsRecord()Ljava/lang/String;
com.android.server.OplusNecService.getWlanHttpRecord()Ljava/lang/String;
com.android.server.OplusNecService.getWlanPowerRecord()Ljava/lang/String;
com.android.server.OplusNecService.getWlanTcpRecord()Ljava/lang/String;
com.android.server.OplusNecService.onCollectPwrStatistic(Z)Ljava/lang/String;
com.android.server.OplusNecService.onStandbyStart(Z)V
com.android.server.OplusNecService.removeNecEventListener(Ljava/lang/String;Lcom/oplus/nec/IOnNecEventListener;)V
com.android.server.OplusNecService.reportNecEvent(IILandroid/os/Bundle;)V
com.android.server.wm.OplusAccessControlManagerService.addEncryptPass(Ljava/lang/String;II)V
com.android.server.wm.OplusAccessControlManagerService.getAccessControlAppsInfo(Ljava/lang/String;I)Ljava/util/Map;
com.android.server.wm.OplusAccessControlManagerService.getAccessControlEnabled(Ljava/lang/String;I)Z
com.android.server.wm.OplusAccessControlManagerService.isEncryptPass(Ljava/lang/String;I)Z
com.android.server.wm.OplusAccessControlManagerService.isEncryptedPackage(Ljava/lang/String;I)Z
com.android.server.wm.OplusAccessControlManagerService.registerAccessControlObserver(Ljava/lang/String;Lcom/oplus/app/IOplusAccessControlObserver;)Z
com.android.server.wm.OplusAccessControlManagerService.setAccessControlAppsInfo(Ljava/lang/String;Ljava/util/Map;I)V
com.android.server.wm.OplusAccessControlManagerService.setAccessControlEnabled(Ljava/lang/String;ZI)V
com.android.server.wm.OplusAccessControlManagerService.unregisterAccessControlObserver(Ljava/lang/String;Lcom/oplus/app/IOplusAccessControlObserver;)Z
com.android.server.wm.OplusAccessControlManagerService.updateRusList(ILjava/util/List;Ljava/util/List;)V
com.android.server.net.OplusNetworkManagementService.addDomainRestrictionList(I[Ljava/lang/String;)Z
com.android.server.net.OplusNetworkManagementService.addNetworkRestriction(I[Ljava/lang/String;)Z
com.android.server.net.OplusNetworkManagementService.clearUidTos(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
com.android.server.net.OplusNetworkManagementService.executeShellToSetIptables(Ljava/lang/String;)Ljava/lang/String;
com.android.server.net.OplusNetworkManagementService.increaseTCPSyncRetryForSpecificKernel()V
com.android.server.net.OplusNetworkManagementService.oplusNetdCmdParse(Ljava/lang/String;I)Ljava/lang/String;
com.android.server.net.OplusNetworkManagementService.oplusNetdGetSysProc(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
com.android.server.net.OplusNetworkManagementService.removeAllDomainRestrictionList(I)Z
com.android.server.net.OplusNetworkManagementService.removeDomainRestrictionList(I[Ljava/lang/String;)Z
com.android.server.net.OplusNetworkManagementService.removeNetworkRestriction(I[Ljava/lang/String;)Z
com.android.server.net.OplusNetworkManagementService.removeNetworkRestrictionAll(I)Z
com.android.server.net.OplusNetworkManagementService.setDomainRestrictionMode(I)Z
com.android.server.net.OplusNetworkManagementService.setFirewallAllowListForNetworkType(II[I)V
com.android.server.net.OplusNetworkManagementService.setFirewallUidRuleForNetworkType(III)V
com.android.server.net.OplusNetworkManagementService.setNetworkRestriction(I)Z
com.android.server.net.OplusNetworkManagementService.setTestId(I)V
com.android.server.net.OplusNetworkManagementService.setUidTos(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
com.android.server.net.IOplusNetworkManagement.setTestId(I)V
com.android.server.vibrator.VibratorManagerService.getActivityComponentName()Ljava/lang/String;
com.oplus.vrr.OPlusRefreshRateService.findDisplayModeIdByPolicy(III)I
com.oplus.vrr.OPlusRefreshRateService.getList(I)Ljava/util/List;
com.oplus.vrr.OPlusRefreshRateService.getModeType(I)I
com.oplus.vrr.OPlusRefreshRateService.getPreferredFrameRate(Ljava/lang/String;Ljava/lang/String;)F
com.oplus.vrr.OPlusRefreshRateService.getRefreshRatePolicy(F)I
com.oplus.vrr.OPlusRefreshRateService.hasFlickerRisk()Z
com.oplus.vrr.OPlusRefreshRateService.isGameAccelerationScene()Z
com.oplus.vrr.OPlusRefreshRateService.isOAMode()Z
com.oplus.vrr.OPlusRefreshRateService.isWhiteListGame(Ljava/lang/String;)Z
com.oplus.vrr.OPlusRefreshRateService.notifyBrightnessChange(F)V
com.oplus.vrr.OPlusRefreshRateService.notifyNitsChange(F)V
com.oplus.vrr.OPlusRefreshRateService.screenStateChange(I)V
com.oplus.vrr.OPlusRefreshRateService.setDisplayFrameRateControl(FLjava/lang/String;II)Z
com.oplus.vrr.OPlusRefreshRateService.setExternalRefreshRateStatus(I)V
com.oplus.vrr.OPlusRefreshRateService.setFrameRate(FLjava/lang/String;Ljava/lang/String;I)Z
com.oplus.vrr.OPlusRefreshRateService.setFrameRateTargetControl(FLjava/lang/String;ZLjava/lang/String;)Z
com.oplus.vrr.OPlusRefreshRateService.setLowFreqVideo(Z)V
com.oplus.vrr.OPlusRefreshRateService.setRefreshRatePolicy(IFIZ)V
com.oplus.vrr.OPlusRefreshRateService.setSystemFrameRateControl(FLjava/lang/String;)Z
com.oplus.vrr.OPlusRefreshRateService.setTgpaGameData(Landroid/os/Bundle;)V
com.oplus.vrr.OPlusRefreshRateService.updateAccelerationPkgName(Ljava/lang/String;II)V
com.oplus.vrr.OPlusRefreshRateService.updateDisplayModes(J)V
