com.android.server.statusbar.StatusBarManagerService.setStatus(ILandroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;)V
com.android.server.StorageManagerService.fixupAppDirRecursive(Ljava/lang/String;III)V
com.android.server.StorageManagerService.getExtMGearInterface()[F
com.android.server.StorageManagerService.moveStorageQuickly(Ljava/lang/String;Ljava/lang/String;I)V
com.android.server.biometrics.sensors.face.FaceService$FaceServiceWrapper.enrollment(Landroid/os/IBinder;[BILandroid/hardware/face/IFaceServiceReceiver;Landroid/view/Surface;Landroid/graphics/RectF;Landroid/graphics/RectF;I)J
com.android.server.biometrics.sensors.face.FaceService$FaceServiceWrapper.extCmd(Landroid/os/IBinder;Landroid/hardware/face/IFaceServiceReceiver;IILjava/lang/String;)I
com.android.server.locksettings.LockSettingsService.checkPrivacyPasswordPattern(Ljava/lang/String;Ljava/lang/String;I)Z
com.android.server.locksettings.LockSettingsService.getPassword()Ljava/lang/String;
com.android.server.locksettings.LockSettingsService.sanitizePassword()V
com.android.server.locksettings.LockSettingsService.savePrivacyPasswordPattern(Ljava/lang/String;Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.addPrimaryClipChangedListener(Landroid/content/IOnPrimaryClipChangedListener;Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.clearPrimaryClip(Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.getClipboardClickTrace()Ljava/util/Map;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getPrimaryClip(Ljava/lang/String;I)Landroid/content/ClipData;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getPrimaryClipDescription(Ljava/lang/String;I)Landroid/content/ClipDescription;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getPrimaryClipSource(Ljava/lang/String;I)Ljava/lang/String;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getStashPrimaryClip()Landroid/content/ClipData;
com.android.server.clipboard.ClipboardService$ClipboardImpl.getUserPrimaryClip(Ljava/lang/String;I)Landroid/content/ClipData;
com.android.server.clipboard.ClipboardService$ClipboardImpl.hasClipboardText(Ljava/lang/String;I)Z
com.android.server.clipboard.ClipboardService$ClipboardImpl.hasPrimaryClip(Ljava/lang/String;I)Z
com.android.server.clipboard.ClipboardService$ClipboardImpl.pushClipboardRuleData(Landroid/content/pm/ParceledListSlice;)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.removePrimaryClipChangedListener(Landroid/content/IOnPrimaryClipChangedListener;Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.setPrimaryClip(Landroid/content/ClipData;Ljava/lang/String;I)V
com.android.server.clipboard.ClipboardService$ClipboardImpl.setPrimaryClipAsPackage(Landroid/content/ClipData;Ljava/lang/String;ILjava/lang/String;)V
com.android.server.wm.ActivityTaskManagerService.castRotationChanged(Z)V
com.android.server.wm.ActivityTaskManagerService.enterSplitScreen(IZ)V
com.android.server.wm.ActivityTaskManagerService.enterSplitScreenMode()V
com.android.server.wm.ActivityTaskManagerService.exitCastMode()V
com.android.server.wm.ActivityTaskManagerService.exitSplitScreen(I)V
com.android.server.wm.ActivityTaskManagerService.getMiuiFreeFormManagerService()Landroid/os/IBinder;
com.android.server.wm.ActivityTaskManagerService.getMiuiMultiWinSplitService()Landroid/os/IBinder;
com.android.server.wm.ActivityTaskManagerService.getNavBarPosition()I
com.android.server.wm.ActivityTaskManagerService.getTaskResizeableForFreeform(I)Z
com.android.server.wm.ActivityTaskManagerService.getTaskSnapshot(IZ)Landroid/window/TaskSnapshot;
com.android.server.wm.ActivityTaskManagerService.getTasks(IZZ)Ljava/util/List;
com.android.server.wm.ActivityTaskManagerService.getTasksVisibleSystem(IZZZ)Ljava/util/List;
com.android.server.wm.ActivityTaskManagerService.getTopSplitPackageNames()Ljava/util/List;
com.android.server.wm.ActivityTaskManagerService.getTopTaskVisibleActivities()Ljava/util/List;
com.android.server.wm.ActivityTaskManagerService.getTopVisibleActivity()Landroid/content/Intent;
com.android.server.wm.ActivityTaskManagerService.handleFreeformModeRequst(Landroid/os/IBinder;I)I
com.android.server.wm.ActivityTaskManagerService.isActivityInEmbedded()Z
com.android.server.wm.ActivityTaskManagerService.isContinuousStart(I)Z
com.android.server.wm.ActivityTaskManagerService.isInFreeFormControlRegon(FF)Z
com.android.server.wm.ActivityTaskManagerService.isInSplitScreenWindowingMode()Z
com.android.server.wm.ActivityTaskManagerService.isPairRootTask(I)Z
com.android.server.wm.ActivityTaskManagerService.isTopActivityInFreeform(Ljava/lang/String;)Z
com.android.server.wm.ActivityTaskManagerService.launchFlashBackFromBackGround(Landroid/app/ActivityManager$RunningTaskInfo;Landroid/graphics/Rect;I)V
com.android.server.wm.ActivityTaskManagerService.launchSmallFreeFormWindow(Landroid/app/ActivityTaskManager$RootTaskInfo;Landroid/graphics/Rect;I)V
com.android.server.wm.ActivityTaskManagerService.moveTopActivityToCastMode()V
com.android.server.wm.ActivityTaskManagerService.notifyRemoveSnapshotQS(Landroid/os/IBinder;)V
com.android.server.wm.ActivityTaskManagerService.notifyTakeSnapshotQS(Landroid/os/IBinder;Ljava/lang/String;)V
com.android.server.wm.ActivityTaskManagerService.registerActivityObserver(Landroid/app/IMiuiActivityObserver;Landroid/content/Intent;)V
com.android.server.wm.ActivityTaskManagerService.registerSecureChangedListener(Landroid/app/IWindowSecureChangeListener;)V
com.android.server.wm.ActivityTaskManagerService.setOrientationOptions(Landroid/os/IBinder;I)V
com.android.server.wm.ActivityTaskManagerService.startBackNavigation(Z)Landroid/window/BackNavigationInfo;
com.android.server.wm.ActivityTaskManagerService.supportsSplitScreen(Landroid/content/ComponentName;)Z
com.android.server.wm.ActivityTaskManagerService.unRegisterSecureChangedListener(Landroid/app/IWindowSecureChangeListener;)V
com.android.server.wm.ActivityTaskManagerService.unregisterActivityObserver(Landroid/app/IMiuiActivityObserver;)V
com.android.server.display.DisplayManagerService$BinderService.getDisplayIds(Z)[I
com.android.server.display.DisplayManagerService$BinderService.setLimitedFrameRate(Landroid/hardware/display/IVirtualDisplayCallback;I)V
com.android.server.vibrator.VibratorManagerService.vibrate(ILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V
com.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper.extCmd(Landroid/os/IBinder;IIILjava/lang/String;)I
com.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper.getSensorLocation()[I
